Summary of Using JIRA at Tracksz - Author: Jaymes H. Sorbel

- Reason: It is the intent that we consider Simplicity when using JIRA Project Planning.  Given the size of our developer team, adding too much complexity at this stage becomes unproductive.

- Usage:

1. EPICs: Tracksz uses EPICs to combine like Stories for the project main development areas.

2. Primary Issue Type: Tracksz primary issue type will be the Story.

3. Story Type Issues: For Tracksz purposes, the Story type issue encapsulates all the requirements for that Story issue.

   Due to not having a large team, when a developer is working on a Story issue, the requirements for that developer includes all the Model View Controller (MVC) requirements - database table creating, user interface creation, back end processing, and testing.

4. Sub-Tasks: By default Tracksz does not create sub-tasks when creating a Story issue.  Developers working on a Story are welcome to break it down into sub-tasks to help organize their development process and/or thoughts.

5. Story Length: A developer should be able to complete a story in two weeks.  A story should be clear, concise, and easily actionable. If they are overly complicated, are not easily explained, they should be broken up into separate stories.

6. Creating Story Issue:  At present, Tracksz only requirement for creating a Story is:

	a. Summary:  As a [user, system, developer, ??], I [want to], [so that].
	            * What the user should be able to do when this is completed. i.e., "As a User, I can click on this button, and X will happen (or, I can make payments using Diners Club)."
                 * Not every story is user-facing. In regards to the backend, it could be "The Store should be able to accept Diners Club as a payment processor."

	b. Labels: 3 or 4 keywords that pertain to the story.

	c. Epic: Select the epic if not already selected.

	d. Acceptance Criteria: What are the things that need to be done for this to be considered complete?
                * Example User-Related:
                - The User can select Diners Club as a payment option.
                - An icon for Diners Club is visible on the checkout page.
                - A transaction must be successful when Diners Club is the payment method.

                * Example Backend:
                - Diners Club is permitted in the backend as a valid merchant.
                - The merchant processor recognizes Diners Club as a merchant.
                - Diners Club authorization codes are returned successfully to the view.

   After creating the Story, if you need to define it better or write an explanation, use the Description field.

   * Create a Story whenever you see or think of another requirement for the system.  At the very least tell me so I can add it to the project.  Everyone has a voice in this project.

7. Closing Stories: When moving a Story to "Done" record an estimate, the best you can, of the time you spent on it.

8. Sprints:  Not sure how we are going to use Sprints yet. However, I intend to use it, at least, for tracking the current Stories being worked on.

Finally, the entire purpose is to track work done and NOT become so complex it becomes unproductive.  Always think simplicity when working with JIRA.

More on Stories:
https://www.atlassian.com/agile/project-management/user-stories
